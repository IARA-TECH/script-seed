name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8 black psycopg2-binary pymongo

      - name: Verificar formatação e indentação
        run: |
          echo "Verificando estilo com flake8..."
          flake8 --max-line-length=120 .
          echo "Formatando código com black (modo verificação)..."
          black --check .

      - name: Executar script principal
        env:
          MONGO_URI: mongodb://localhost:27017
          POSTGRES_URL: postgresql://testuser:testpass@localhost:5432/testdb
        run: |
          echo "Executando script seed.py..."
          python script-seed/seed.py

      - name: Pipeline finalizado com sucesso
        run: echo "Tudo rodou corretamente!"
